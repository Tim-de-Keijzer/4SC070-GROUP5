function V_result = Opti_Clamp(x)%% Global variablesglobal N_sim width amplitude x_resultpWaveformFrequency  = 1;    % Step frequency in [Hz]. Positive for forward, negative for backwards% Clamp and shear amplitudes and offset determiningpShearMax = 150;    % [V]pShearMin = -150;   % [V]pShearAmpl = (pShearMax - pShearMin) / 2;pShearOffs = (pShearMax + pShearMin) / 2;pShearSatMax = 250;    % [V]pShearSatMin = -250;   % [V]pClampMax = 60;     % [V]pClampMin = -30;    % [V]pClampAmpl = (pClampMax - pClampMin) / 2;pClampOffs = (pClampMax + pClampMin) / 2;pClampSatMax = 60;    % [V]pClampSatMin = -30;   % [V]pShearStep = (3.5e-6)*((pShearMax-pShearMin)/500);    % [m/wave]% Amplitude gain for analog output of SpeedgoatpAmpGain = 1./[25, 25, 7.5, 7.5];%% Model namesys_name = 'Waveformmodel';% sys_name = 'EV_2spd_4AUB10_2';load_system(sys_name);%% Set actual optimization valueswidth         = x(1);  % clamp dimple widthamplitude     = x(2);  % clamp dimple height%% Set constrainsreq      = [0, 0.1, 0, 0.25];min_width = req(1);                                                        max_width = req(2);                                                    min_amp = req(3);                                                    max_amp = req(4);                                       %% Build matrix of optimization parameter valuesx_result = [x_result; x'];%% Simulationoptions = simset('SrcWorkspace','current');results = sim(sys_name,[],options);% Consider last value of the computed output vector V_result = results.y;%% Checks% % Check whether cycle could be finished exactly in N_sim computational steps;% % if cycle duration is less than N_sim, set output to infinite% if (max(size(results.t)) < N_sim)%      V_result = Inf;% endif width >= min_width    V_result = V_result;else    V_result = Inf;endif width <= max_width    V_result = V_result;else    V_result = Inf;endif amplitude >= min_amp    V_result = V_result;else    V_result = Inf;endif amplitude <= max_amp    V_result = V_result;else    V_result = Inf;end